var tipuesearch = {"pages": [{'title': 'About', 'text': '課程名稱: 協同產品設計實習 - Collaborative Product Design Practice \n 學員作業網站: https://mdecd2025.github.io/hw-CHN41223132/ \n 學員作業倉儲: https://github.com/mdecd2025/hw-CHN41223132 \n \n 課程代號: cd2025 \n Teams 線上教學: \n 以 "學號@nfu.edu.tw" 登入 \xa0 https://login.microsoftonline.com/ \xa0 Office 365 \n Teams 團隊代碼:\xa0 p5z4eku \n \n 課程評分: \n Homework (30%) - 每週至少提交兩次與課程進度有關的內容, 完成後填回自評表單 \n Exam (40%) - 建立包含操作流程影片、心得以及提供檔案下載的網頁後填回自評表單 \n Final Report (30%) - 利用網頁內容進行簡報並提交 pdf 格式書面報告, 完成後填回自評表單 \n \n', 'tags': '', 'url': 'About.html'}, {'title': 'tasks', 'text': '', 'tags': '', 'url': 'tasks.html'}, {'title': 'w1', 'text': '下載三個檔案 \n', 'tags': '', 'url': 'w1.html'}, {'title': 'task2', 'text': '', 'tags': '', 'url': 'task2.html'}, {'title': 'w3', 'text': '列出 2a 學員作業網站與倉儲連結 \n 列出 2b 學員作業網站與倉儲連結 \n 列出 2a 分組網站與倉儲連結 \n 列出 2b 分組網站與倉儲連結 \n 下列程式是本組的分組帳號名單以及分組網頁連結 \n # 從\xa0 Brython 程式庫中的 browser 導入 html, 可用來輸出超文件內容\n# 而所導入的 document 可以指向網頁中的特定 id 內容\nfrom browser import html, document\n# 建立 url 變數與網站中 2a 學員的學號與帳號資料 URL 網誌字串對應\nurl = "https://mde.tw/list/2a.txt"\n# 利用 open() 物件中的 readlines() 方法, 取出網站中的資料並逐行放入數列中, 因此 data 的資料型別為數列\ndata = open(url).readlines()\n# 進行資料查驗時, 印出 data 數列內容\n#print(data)\n# 因為學員資料中的第一列為標題, 因此有效資料從索引值 1 開始\nall_stud = data[1:]\n# 利用 len() 函式查驗 all_stud 數列有幾筆資料, 因為要與前後的字串併接, 因此利用 str() 將整數轉為字串\nprint("總共有 " + str(len(all_stud)) + "名學員")\n# \n# 利用 document[] 取得 id 為 "brython_div1" 的位置, 然後與 brython_div1 變數對應\nbrython_div1 = document["brython_div1"]\n# 利用 Brython 的 "<=" 特殊符號, 將右值帶有字串與超文件內容物件插入 brython_div1 變數所指定的位置\n# 其中利用 html.A 建立 anchor 標註物件, 第一個變數為 anchor 字串, 第二個變數則為 hyper text reference\nbrython_div1 <= "1. " + html.A("2a-ag6", href="https://mdecd2025.github.io/2a-ag6/") + html.A("(repo)", href="https://github.com/mdecd2025/2a-ag6")\n# 利用 html.BR() 插入 break 標註\nbrython_div1 <= html.BR()\nbrython_div1 <= "2. " + html.A("41223110", href="https://github.com/mdecd2025/hw-41223110")+ html.A("(repo)", href="https://github.com/mdecd2025/hw-41223110")\nbrython_div1 <= html.BR()\nbrython_div1 <= "3. " + html.A("41223133", href="https://mdecd2025.github.io/hw-41223133/")+ html.A("(repo)", href="https://github.com/mdecd2025/hw-41223133")\nbrython_div1 <= html.BR()\nbrython_div1 <= "4. " + html.A("41223129", href="https://mdecd2025.github.io/hw-hong41223129/")+ html.A("(repo)", href="https://github.com/mdecd2025/hw-hong41223129")\nbrython_div1 <= html.BR()\nbrython_div1 <= "5. " + html.A("41223147", href="https://mdecd2025.github.io/hw-41223147/")+ html.A("(repo)", href="https://github.com/mdecd2025/hw-41223147")\nbrython_div1 <= html.BR()\nbrython_div1 <= "6. " + html.A("41223125", href="https://mdecd2025.github.io/hw-Linjiahong41223125")+ html.A("(repo)", href="https://github.com/mdecd2025/hw-Linjiahong41223125")\nbrython_div1 <= html.BR()\nbrython_div1 <= "7. " + html.A("41223132", href="https://mdecd2025.github.io/hw-CHN41223132/")+ html.A("(repo)", href="https://github.com/mdecd2025/hw-CHN41223132") \n 顯示結果如下 \n 1.\xa0 2a-ag6 (repo) 2.\xa0 41223110 (repo) 3.\xa0 41223133 (repo) 4.\xa0 41223129 (repo) 5.\xa0 41223147 (repo) 6.\xa0 41223125 (repo) 7.\xa0 41223132 (repo) \n 目前班上尚未納入組的成員(甲班) \n import urllib.request\n\n# 設定 URL\nurl = "https://mde.tw/list/2a.txt"\n\n# 讀取網站內容\nresponse = urllib.request.urlopen(url)\ndata = response.read()  # 讀取原始資料\n\n# 檢查是否為 bytes，若是則解碼\nif isinstance(data, bytes):\n    data = data.decode(\'utf-8\')\n\n# 分割行\ndata_lines = data.splitlines()\n\n# 確保資料存在\nif len(data_lines) > 1:\n    all_stud = data_lines[1:]  # 跳過標題列\n    print("總共有 " + str(len(all_stud)) + " 名學員")\nelse:\n    all_stud = []\n    print("學員名單讀取失敗")\n\n# 已分組學員帳號\ngrouped_accounts = {\n    \'41223154\', \'41271125\', \'41271158\', \'41271146\', \'41271131\', \'CYG41223103\', \'41223102\', \n    \'41023128\', \'41023137\', \'41223137\', \'41223157\', \'41223156\', \'otakuyoyo\', \'41223141\', \n    \'41223113\', \'kim41223114\', \'joeisme1208\', \'41223116\', \'41223144\', \'41223140\', \'41223143\', \n    \'41223138\', \'41223134\', \'41223136\', \'zhe41223118\', \'Spirit0224\', \'yuhao-08\', \'41223158\', \n    \'Ren911308\', \'41223150\', \'Manto8\', \'CYA41223106\', \'yan21ed\', \'Lin41223107\', \'41223133\', \n    \'hong41223129\', \'41223110\', \'41223147\', \'Linjiahong41223125\', \'CHN41223132\', \n    \'Yu-Fang-Hong\', \'41023111\', \'yckaooooo\', \'kolas911205\', \'41023105\', \'40932134\', \'41223104\', \n    \'yan41223101\', \'41223105\', \'41223153\', \'41223120\', \'41223152\', \'G8People\', \n    \'WSE41223112\', \'41223146\', \'41223119\'\n}\n\n# 未分組學員清單\nungrouped_accounts = []\n\nfor student in all_stud:\n    parts = student.split()  # 用空格分割學號和帳號\n    if len(parts) == 1:\n        student_id = parts[0]\n        account = student_id  # 如果沒有帳號，將學號當作帳號\n    elif len(parts) == 2:\n        student_id, account = parts\n    \n    account = account.strip()\n    \n    # 如果帳號不在已分組帳號清單中，則加入未分組學員清單\n    if account not in grouped_accounts:\n        ungrouped_accounts.append(student_id)\n\n# 顯示未分組學員的學號，並每行顯示一個學號\nprint("未分組學員學號清單：")\nfor student_id in ungrouped_accounts:\n    print(student_id)\n \n \n 顯示結果如下 \n 總共有 60 名學員 未分組學員學號清單： 41023220 41223111 41223124 41223148 <completed in 47.30 ms> \n', 'tags': '', 'url': 'w3.html'}, {'title': 'w4', 'text': '這周設定近端與ip位置，在同學的協助下設定完成。 \n \n \n', 'tags': '', 'url': 'w4.html'}, {'title': 'task4', 'text': '', 'tags': '', 'url': 'task4.html'}, {'title': 'w5', 'text': '重要英文單字與解釋及用法 \n \n Simulation : 模擬，指用來模擬現實世界的過程或系統。在 Webots 中，指虛擬環境的運行。 \n Prototyping : 原型製作，指開發產品或系統的初步模型或版本。在 Webots 中，用來快速構建機器人的模型和功能。 \n Locomotion : 運動學，指機器人的移動方式，例如輪式、步態或飛行運動。 \n Controller : 控制器，指控制機器人行為的程式，通常是由使用者編寫的。 \n Actuator : 執行器，指機器人用來執行動作的裝置，如馬達、電動機等。 \n Sensor : 感測器，指機器人用來感知環境的裝置，如距離感測器、相機等。 \n Supervisor Controller : 監控控制器，具有執行高權限操作的能力，能夠進行像人類操作員一樣的模擬控制。 \n \n', 'tags': '', 'url': 'w5.html'}, {'title': 'task5', 'text': 'Webots 是一款專業的移動機器人模擬軟體套件。它提供了一個快速原型開發環境，允許使用者創建具有物理屬性的 3D 虛擬世界，例如質量、關節、摩擦係數等。使用者可以添加簡單的被動物件或稱為移動機器人的主動物件。這些機器人可以具有不同的移動方式（輪式機器人、足式機器人或飛行機器人）。 \n 此外，它們可以配備各種感測器和致動器裝置，例如距離感測器、驅動輪、攝影機、馬達、觸碰感測器、發射器、接收器等。最後，使用者可以為每個機器人單獨編寫程式，以實現所需的行為。Webots 提供大量的機器人模型與控制程式範例，以幫助使用者快速上手。 \n Webots 也包含多種與實際移動機器人連接的介面，因此當模擬機器人表現符合預期後，使用者可以將其控制程式轉移到真實機器人，如 e-puck、DARwIn-OP、Nao 等。此外，透過相關系統，也可以添加新的介面。 \n', 'tags': '', 'url': 'task5.html'}, {'title': '你可以用 Webots 做些什麼？', 'text': "Webots 非常適合與移動機器人相關的研究和教育項目。許多移動機器人項目多年來依賴 Webots，涉及以下領域： \n \n 移動機器人原型設計（學術研究、汽車產業、航空、吸塵器產業、玩具產業、愛好者等） \n 機器人運動研究（步態、仿人類機器人、四足機器人等） \n 多智能體研究（群體智慧、協作機器人群體等） \n 自適應行為研究（遺傳算法、神經網絡、人工智慧等） \n 機器人教學（機器人課程、C/C++/Java/Python 編程課程等） \n 機器人競賽（如 Robotstadium 或 Rat's Life） \n \n", 'tags': '', 'url': '你可以用 Webots 做些什麼？.html'}, {'title': '使用 Webots 需要知道什麼？', 'text': '使用 Webots 開發模擬需要具備一些基本的技術知識： \n \n 需要具備 C、C++、Java、Python 或 MATLAB 程式語言的基礎知識來編寫機器人控制程式。即使你不懂這些語言，仍然可以使用簡單的圖形化編程語言 BotStudio 來編程 e-puck 和 Hemisson 機器人。 \n 如果你不想使用 Webots 提供的現有機器人模型，並希望創建自己的機器人模型或在模擬環境中加入特殊物件，則需要具備基本的 3D 電腦圖形學和 VRML97 描述語言的知識。這將使你能夠在 Webots 中創建 3D 模型，或從 3D 建模軟體中匯入模型。 \n \n', 'tags': '', 'url': '使用 Webots 需要知道什麼？.html'}, {'title': '如何獲得使用者支援？', 'text': 'Cyberbotics 提供付費的使用者支援服務，通過其首席服務計劃和定制開發服務來提供幫助。此外，還有社群支援可以使用，但並不保證一定能得到答案： \n \n Robotics StackExchange 是提出 Webots 技術問題的最佳場所。 \n GitHub Discussions 可用於提出與 Webots 開發和文檔相關的問題。 \n GitHub Issues 只應用於報告 Webots 中的錯誤。 \n Discord 可用於與 Webots 社群進行快速提問和即時討論。 \n \n', 'tags': '', 'url': '如何獲得使用者支援？.html'}, {'title': 'Webots 模擬', 'text': 'Webots 模擬由以下項目組成： \n \n 一個 Webots 世界檔案（.wbt），定義了一個或多個機器人及其環境。該檔案有時會依賴外部的 PROTO 檔案（.proto）和材質。 \n 一個或多個機器人的控制程式（C/C++/Java/Python/MATLAB）。 \n 可選的物理插件，可用來修改 Webots 的常規物理行為（C/C++）。 \n \n', 'tags': '', 'url': 'Webots 模擬.html'}, {'title': '什麼是 World？', 'text': '在 Webots 中，世界是對機器人及其環境屬性的 3D 描述。它包含每個物件的位置、方向、幾何形狀、外觀（如顏色或亮度）、物理屬性、物件類型等描述。世界是以層次結構組織的，物件可以包含其他物件（如在 VRML97 中）。例如，一個機器人可以包含兩個輪子、一個距離傳感器和一個包含相機的關節等。世界檔案不包含機器人的控制程式代碼；它只指定每個機器人所需的控制程式名稱。世界被保存在 ".wbt" 檔案中，這些檔案存儲在每個 Webots 專案的 "worlds" 子目錄中。 \n', 'tags': '', 'url': '什麼是 World？.html'}, {'title': '什麼是 Controller？', 'text': '控制程式是一個控制世界檔案中所指定的機器人的計算機程式。控制程式可以使用 Webots 支援的任何程式語言編寫：C、C++、Java、Python 或 MATLAB。當模擬啟動時，Webots 會啟動指定的控制程式，並將每個控制程式與相應的模擬機器人關聯。注意，幾個機器人可以使用相同的控制程式代碼，但會為每個機器人啟動一個不同的進程。 \n', 'tags': '', 'url': '什麼是 Controller？.html'}, {'title': '什麼是 Supervisor Controller？', 'text': 'Supervisor 控制程式是指一個機器人的控制程式，該機器人的監控欄位被設置為 TRUE。它可以執行通常只能由人類操作員而非真實機器人執行的操作。Supervisor 控制程式可以使用上述任何程式語言編寫，與普通的機器人控制程式相比，Supervisor 控制程式擁有特權操作的權限，這些特權操作包括模擬控制，例如將機器人移動到隨機位置、拍攝模擬視頻等。 \n', 'tags': '', 'url': '什麼是 Supervisor Controller？.html'}, {'title': 'task6', 'text': '', 'tags': '', 'url': 'task6.html'}, {'title': 'w6', 'text': '老師今天教學如何使用webots，包含檔案下載與安裝 \n 在課後嘗試使用 webots，但還尚未設定完成。 \n', 'tags': '', 'url': 'w6.html'}, {'title': 'w10', 'text': '\n \n \n', 'tags': '', 'url': 'w10.html'}, {'title': 'list', 'text': '列出 2a 學員作業網站與倉儲連結 \n 列出 2b 學員作業網站與倉儲連結 \n 列出 2a 分組網站與倉儲連結 \n 列出 2b 分組網站與倉儲連結 \n \n', 'tags': '', 'url': 'list.html'}, {'title': 'Homework', 'text': '作業 (30%) \n HW1 (5%):  建立由 Box 組成的平面四連桿機構 Webots 模擬場景 \n part1: \n 請各學員在 USB 隨身碟或個人電腦上完成 cd2025 課程所需的可攜系統配置: \n 下載  portable_wcm2025.7z  (330MB, 解開壓縮後 1.4GB) \n Webots_2025a.7z  (1.5 GB, 解開後約為 2.9GB, 可單獨運作) \n Webots_2025a_web.7z  (171 MB, 解開壓縮後約為 1GB, 必須連網運作) \n Blender4.2.7z \n part2: \n 請各學員完成可攜程式系統配置後, 利用 Webots R2025a 中寬度與高度都為 0.1m 的 box 物件建立一個簡單的平面四連桿機構模擬場景. \n base (基座) 長度 1m, link1 長度 0.4m, link2 長度 0.6m, link3 長度 0.9m, 各轉軸均為 HingeJoint, joint1 旋轉速度設定為 1radian/sec. \n part3: \n 模擬場景啟動後, 按下 s 鍵機構開始作動, 按下 p 鍵後機構暫停. \n 參考資料: \n cd2025_hw1_demo.7z \n HW2 (5%):  建立由 CAD 繪製零件組成的平面四連桿機構 Webots 模擬場景 \n 各學員請利用 CAD 系統依據 HW1 的連桿尺寸與運動方式, 配置適當大小的旋轉軸以及基座後, 利用 Webots R2025a 完成一個簡單的平面四連桿機構模擬場景. \n 參考資料: \n fourbar_slvs.7z \n HW3 (20%): 建立 Webots 桌上籃球遊戲機模擬系統 \n 請各分組利用CAD 系統建立一個能在電腦桌 (1600W X 700D X 740H mm) 上運作的投籃機構 ( 參考影片 )後, 導入 Webots R2025a 套件, 建立一個能由使用者透過鍵盤按鍵操作, 且具備計分板的籃球遊戲機模擬系統. \n 參考資料: \n 參考資料: \n fourbar_ball_throwing_linkage.slvs \n sixbar_ball_throwing_linkage.slvs \n \n', 'tags': '', 'url': 'Homework.html'}, {'title': 'HW1', 'text': 'HW1 (5%):  建立由 Box 組成的平面四連桿機構 Webots 模擬場景 \n 操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 HW1 - 學員學號 \n \n', 'tags': '', 'url': 'HW1.html'}, {'title': 'HW2', 'text': 'HW2 (5%):  建立由 CAD 繪製零件組成的平面四連桿機構 Webots 模擬場景 \n 操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 HW2 - 學員學號 \n \n', 'tags': '', 'url': 'HW2.html'}, {'title': 'HW3', 'text': 'HW3 (20%): 建立 Webots 桌上籃球遊戲機模擬系統 \n 操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 HW3 - 學員學號 \n \n', 'tags': '', 'url': 'HW3.html'}, {'title': 'Midterm', 'text': '本課程所繳交的期中成績為學員自評之學習期望成績. \n 期中考週的自評期望成績繳交流程: \n \n 整理先前所完成的各週的進度、作業網頁內容以及心得 \n 拍攝期中自評影片, 上傳至 Youtube 後, 以" 國立虎尾科技大學 - 機械設計工程系 - cd2025 期中自評- 學員學號 "為影片標題後嵌入本頁面中 \n 回填期中自評表單 \n 上傳學員期中成績 \n \n 各週進度: \n 各週網頁內容: \n 期中心得:本學期所教的內容比上學期更加難，要更花心思來做。 \n 期中自評影片: \n \n \n', 'tags': '', 'url': 'Midterm.html'}, {'title': 'Exam', 'text': 'Exam1 (10%): 建立 Webots 基本物件模擬場景 \n 各學員利用 Webots R2025a 套件中的 Shape 物件, 隨堂建立指定的機電系統模擬場景, 並利用 Python 程式進行互動控制. \n Exam2 (10%): 利用 CAD 零組件建立模擬場景\xa0 \n 各學員利用 CAD (Solvespace 與 NX2312), 隨堂建立指定的系統模型零組件後, 導入 Webots R2025a 後, 建立機電系統模擬場景, 並利用 Python 程式進行互動控制. \n Exam3 (20%): Webots 機電模擬場景的協同設計 \n 各分組利用 CAD (Solvespace 與 NX2312), 隨堂建立指定的系統模型零組件後, 導入 Webots R2025a 後, 建立機電系統模擬場景, 並利用 Python 程式進行互動控制. 過程中各學員必須採同步協同模式, 維護從 Github Classroom 取得的分組協同倉儲以及網站. \n 協同分組方式: \n \n 分配學員負責利用 Solvespace 建立系統零組件, 過程中必須將所建構之零組件檔案與繪圖過程影片上傳至分組網頁. \n 分配學員負責利用 NX2312 建立系統零組件, 過程中必須將所建構之零組件檔案與繪圖過程影片上傳至分組網頁. \n 分配學員負責利用 Webots 建立機電系統模擬場景, 並利用 Python 程式進行控制, 過程中必須將建構過程拍成帶有說明字幕的影片上傳至分組網頁. \n \n', 'tags': '', 'url': 'Exam.html'}, {'title': 'Exam1', 'text': 'Exam1 (10%): 建立 Webots 基本物件模擬場景 \n 操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam1 - 學員學號 \n', 'tags': '', 'url': 'Exam1.html'}, {'title': 'Exam2', 'text': 'Exam2 (10%): 利用 CAD 零組件建立模擬場景 \n 操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam2 - 學員學號 \n', 'tags': '', 'url': 'Exam2.html'}, {'title': 'Exam3', 'text': 'Exam3 (20%): Webots 機電模擬場景的協同設計 \n 操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam3 - 學員學號 \n', 'tags': '', 'url': 'Exam3.html'}, {'title': 'Final', 'text': '期末協同專案執行過程影片、簡報與 PDf 報告檔案 (六人一組) (30%) \n 題目:  Webots 動態投籃模擬系統的協同設計 \n 說明:  \n 籃框架被配置在一定範圍內, 可隨機慢速前進、後退及左右擺動, 投籃機構系統帶有一定數量的籃球, 被配置在可自由移動的輪車上. \n 操作者可利用鍵盤特定按鍵控制投籃輪車的移動並發射投籃, 每投出一球後系統透過記分板進行計分, 並由送球機構進行補球或移動輪車取球, 遊戲可進行至全部數量籃球投完為止. \n 請將期末協同專案執行過程、內容與心得, 製作成影片，配合字幕上傳至 Youtube 後嵌入各階段的期末報告頁面中. \n 影片標題:  國立虎尾科技大學 - 機械設計工程系 - cd2025 期末報告 - 學員學號 - 各階段影片主題 \n', 'tags': '', 'url': 'Final.html'}, {'title': 'Brython', 'text': '1 add to 100 \n  導入 brython 程式庫  \n \n \n \n \n  啟動 Brython  \n \n \n \n  導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n \n \n \n  add 1 to 100 開始  \n \n \n  add 1 to 100 結束 \n  editor1 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor1 結束   ##########################################  \n 從 1 累加到 100 part2: \n 1 add to 100 cango_three_gears BSnake AI Tetris \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n  add 1 to 100 part2 開始  \n \n \n  add 1 to 100 part2 結束 \n  editor2 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor2 結束  \n \n \n', 'tags': '', 'url': 'Brython.html'}]};